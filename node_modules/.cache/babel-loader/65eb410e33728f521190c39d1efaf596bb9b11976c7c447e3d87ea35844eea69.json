{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gsubi\\\\Documents\\\\simplediary\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setdata] = useState([]); //받는 데이터 자체가 배열\n\n  const dataId = useRef(0);\n  const getData = async () => {\n    const res = await fetch(\"https:jsonplaceholder.typicode.com/comments\").then(res => res.json());\n    const initData = res.slice(0, 20).map(it => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime() + 1,\n        id: dataId.current++\n      };\n    });\n    setdata(initData);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setdata([newItem, ...data]);\n  };\n  const onDelete = targetId => {\n    const newDiaryList = data.filter(it => it.id !== targetId //targetId가 아닌 배열을 새로 저장\n    );\n    setdata(newDiaryList);\n  };\n  const onEdit = (targetId, newContent) => {\n    setdata(data.map(it => it.id === targetId ? {\n      ...it,\n      content: newContent\n    } : it));\n  };\n\n  //map으로 순회하면서 해당 배열이 타겟 아이디랑 같을 경우 컨텐츠 제외 모두 복사 후 컨텐츠만 변경\n\n  const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return {\n        goodcount: 0,\n        badCount: 0,\n        goodRatio: 0\n      };\n    }\n    console.log(\"일기 분석 시작\");\n    const goodCount = data.filter(it => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = goodCount / data.length * 100.0;\n    return {\n      goodCount,\n      badCount,\n      goodRatio\n    };\n  }, [data.length]);\n  const {\n    goodCount,\n    badCount,\n    goodRatio\n  } = getDiaryAnalysis;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DiaryEditor, {\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC804\\uCCB4 \\uC77C\\uAE30 : \", data.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uAC1C\\uC218 : \", goodCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uB098\\uC05C \\uC77C\\uAE30 \\uAC1C\\uC218 : \", badCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uAE30\\uBD84 \\uC88B\\uC740 \\uC77C\\uAE30 \\uBE44\\uC728 : \", goodRatio]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DiaryList, {\n      onEdit: onEdit,\n      diaryList: data,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7DwsTlaYmaCFpnfyj8FszoelwpY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useRef","useState","DiaryEditor","DiaryList","jsxDEV","_jsxDEV","App","_s","data","setdata","dataId","getData","res","fetch","then","json","initData","slice","map","it","author","email","content","body","emotion","Math","floor","random","created_date","Date","getTime","id","current","onCreate","newItem","onDelete","targetId","newDiaryList","filter","onEdit","newContent","getDiaryAnalysis","useMemo","length","goodcount","badCount","goodRatio","console","log","goodCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","diaryList","_c","$RefreshReg$"],"sources":["C:/Users/gsubi/Documents/simplediary/src/App.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport './App.css';\nimport DiaryEditor from './DiaryEditor';\nimport DiaryList from './DiaryList';\n\n\n\nfunction App() {\n  const [data, setdata] = useState([]); //받는 데이터 자체가 배열\n \n  const dataId = useRef(0); \n\n\n\n  const getData = async () => {\n    const res = await fetch(\n      \"https:jsonplaceholder.typicode.com/comments\"\n    ).then((res) => res.json());\n   \n    const initData = res.slice(0, 20).map((it) => {\n      return {\n        author: it.email,\n        content: it.body,\n        emotion: Math.floor(Math.random() * 5) + 1,\n        created_date: new Date().getTime() + 1,\n        id: dataId.current++\n      };\n    });\n setdata(initData);\n  };\n\n  useEffect(() =>\n  {getData()}, [])\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      author,\n      content,\n      emotion,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setdata([newItem, ...data]);\n  }\n  \n  const onDelete = (targetId) => {\n    const newDiaryList = data.filter(\n      (it) => it.id !== targetId //targetId가 아닌 배열을 새로 저장\n    );\n    setdata(newDiaryList);\n  }\n\n  const onEdit = (targetId, newContent) => {\n    setdata(\n      data.map((it) =>\n        it.id === targetId ? { ...it, content: newContent } : it\n      )\n    );\n  };\n\n  \n //map으로 순회하면서 해당 배열이 타겟 아이디랑 같을 경우 컨텐츠 제외 모두 복사 후 컨텐츠만 변경\n\n   const getDiaryAnalysis = useMemo(() => {\n    if (data.length === 0) {\n      return { goodcount: 0, badCount: 0, goodRatio: 0 };\n    }\n    console.log(\"일기 분석 시작\");\n\n    const goodCount = data.filter((it) => it.emotion >= 3).length;\n    const badCount = data.length - goodCount;\n    const goodRatio = (goodCount / data.length) * 100.0;\n    return { goodCount, badCount, goodRatio };\n  }, [data.length]);\n\n  const { goodCount, badCount, goodRatio } = getDiaryAnalysis;\n  \n  return (\n    <div className=\"App\">\n      <DiaryEditor onCreate={onCreate} />\n          <div>전체 일기 : {data.length}</div>\n      <div>기분 좋은 일기 개수 : {goodCount}</div>\n      <div>기분 나쁜 일기 개수 : {badCount}</div>\n      <div>기분 좋은 일기 비율 : {goodRatio}</div>\n     <DiaryList onEdit={onEdit} diaryList={data} onDelete={onDelete}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}